---
{{- $rootMinioUserValue := (randAlpha 16) | b64enc | quote }}
{{- $rootMinioPasswordValue := (randAlpha 16) | b64enc | quote }}
{{- $minioSecret := (lookup "v1" "Secret" .Release.Namespace "bailo-minio") }}
{{- if $minioSecret}}
{{- $rootMinioUserValue = index $minioSecret.data "root-user" }}
{{- $rootMinioPasswordValue = index $minioSecret.data "root-password" }}
{{- end -}}
{{- if not .Values.minio.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "bailo.fullname" . }}-minio
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  root-password: {{ .Values.minio.password | b64enc | quote }}
  root-user: {{ .Values.minio.user | b64enc | quote }}
{{ else  }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "bailo.fullname" . }}-minio
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  root-user: {{ $rootMinioUserValue }}
  root-password: {{ $rootMinioPasswordValue }}
{{- end }}
---
{{- if .Values.modelMirror.export.kmsSignature.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "bailo.fullname" . }}-kms
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  access: {{ .Values.modelMirror.export.kmsSignature.KMSClient.accessKey | b64enc | quote }}
  secret: {{ .Values.modelMirror.export.kmsSignature.KMSClient.secretKey | b64enc | quote }}
{{- end }}
---
{{- if .Values.instrumentation.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "bailo.fullname" . }}-apm
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  {{- if .Values.instrumentation.debug }}
  debug: debug
  {{ else }}
  debug: info
  {{- end }}
data:
  endpoint: {{ .Values.instrumentation.endpoint | b64enc | quote }}
  headers: {{ printf "Authorization=Bearer %s" .Values.instrumentation.authenticationToken | b64enc | quote }}
  auth-token: {{ .Values.instrumentation.authenticationToken | b64enc | quote }}
{{- end }}
---
{{- if .Values.inference.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "bailo.fullname" . }}-inference
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  auth-token: {{ .Values.inference.authorisationToken | b64enc | quote }}
{{- end }}
#---
#{{- $MongoPasswordValue := (randAlpha 16) | b64enc | quote }}
#{{- $MongoRootPasswordValue := (randAlpha 16) | b64enc | quote }}
#{{- $MongoReplicaSetKeyValue := (randAlpha 16) | b64enc | quote }}
#{{- $mongoSecret := (lookup "v1" "Secret" .Release.Namespace "bailo-mongodb") }}
#{{- if $mongoSecret}}
#{{- $MongoPasswordValue = index $mongoSecret.data "mongodb-passwords" }}
#{{- $MongoRootPasswordValue = index $mongoSecret.data "mongodb-root-password" }}
#{{- $MongoReplicaSetKeyValue = index $mongoSecret.data "mongodb-replica-set-key" }}
#{{- end -}}
#apiVersion: v1
#kind: Secret
#metadata:
#  name: {{ include "bailo.fullname" . }}-mongodb
#  namespace: {{ .Release.Namespace }}
#type: Opaque
#data:
#  mongodb-passwords: {{ $MongoPasswordValue }}
#  mongodb-root-password: {{ $MongoRootPasswordValue }}
#  mongodb-replica-set-key: {{ $MongoReplicaSetKeyValue }}
