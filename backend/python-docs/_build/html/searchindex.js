Search.setIndex({"docnames": ["bailo.core", "bailo.helper", "index", "notebooks/access_requests_demo", "notebooks/datacards_demo", "notebooks/experiment_tracking_demo", "notebooks/models_and_releases_demo_pytorch", "notebooks/schemas_demo", "pre-commit-config", "pylint", "pyproject", "readme_link"], "filenames": ["bailo.core.rst", "bailo.helper.rst", "index.rst", "notebooks/access_requests_demo.ipynb", "notebooks/datacards_demo.ipynb", "notebooks/experiment_tracking_demo.ipynb", "notebooks/models_and_releases_demo_pytorch.ipynb", "notebooks/schemas_demo.ipynb", "pre-commit-config.md", "pylint.md", "pyproject.md", "readme_link.md"], "titles": ["bailo.core package", "bailo.helper package", "Welcome to Bailo\u2019s Python Client documentation!", "Managing Access Requests", "Managing Datacards", "Experiment Tracking with Bailo &amp; MLFlow", "Managing Models &amp; Releases (ResNet-50 Example with PyTorch)", "Managing Schemas", "pre-commit-config.yaml", "A comma-separated list of package or module names from where C extensions may", "pypyroject.toml", "Bailo Python Client"], "terms": {"The": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11], "contain": [0, 5, 6, 10], "suppport": 0, "one": [0, 5, 6], "endpoint": [0, 3, 4, 6, 7], "It": [0, 10], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11], "recommend": 0, "us": [0, 1, 5, 8, 10, 11], "helper": [0, 2, 3, 4, 6, 7], "most": [0, 5], "class": [0, 1, 3, 4, 5, 6, 7], "agent": [0, 2, 3, 4, 6, 7], "sourc": [0, 1], "base": [0, 1], "object": [0, 1, 3, 4, 5, 6, 7], "api": [0, 11], "talk": 0, "wrap": 0, "each": [0, 4, 6], "request": [0, 1, 2], "an": [0, 1], "except": 0, "handler": 0, "map": 0, "error": [0, 1, 4, 6], "python": [0, 1, 3, 4, 6, 7, 8, 10], "among": 0, "statu": 0, "code": [0, 1, 6, 8], "less": 0, "than": 0, "400": 0, "default": [0, 1, 3, 4, 6, 7, 11], "timeout": [], "5": [1, 5, 7, 9], "second": [], "delet": [0, 1], "arg": [0, 9], "kwarg": 0, "get": [0, 1, 2], "patch": 0, "post": [0, 1], "push": 0, "put": 0, "pkiagent": [0, 2, 3, 4, 6, 7], "cert": [0, 3, 4, 6, 7], "str": [0, 1, 5], "kei": [0, 2, 3, 4, 6, 7], "auth": [0, 3, 4, 6, 7], "__init__": [0, 1], "initi": [0, 6], "pki": [0, 3, 4, 6, 7], "authent": [0, 3, 4, 6, 7], "paramet": [0, 1, 3, 4, 5, 6, 7], "path": [0, 1, 6], "file": [0, 1, 6, 10, 11], "certif": 0, "author": 0, "tokenag": [0, 2], "access_kei": 0, "secret_kei": 0, "token": 0, "access": [0, 1, 2, 5], "secret": 0, "client": [0, 1, 3, 4, 6, 7], "url": [0, 3, 4, 5, 6, 7], "creat": [0, 1, 8, 11], "can": [0, 1, 3, 4, 5, 6, 7, 8, 11], "websit": 0, "handl": [0, 3, 4, 6, 7], "delete_access_request": 0, "model_id": [0, 1, 3, 6], "access_request_id": [0, 1, 3], "specif": [0, 1, 4, 6], "associ": 0, "model": [0, 1, 2, 3, 4, 5, 7, 11], "uniqu": [0, 1, 7], "id": [0, 1, 5], "return": [0, 1, 6, 7], "json": [0, 1, 6, 7], "respons": [0, 1], "delete_fil": 0, "file_id": 0, "delete_releas": 0, "release_vers": 0, "releas": [0, 1, 2, 4, 5, 11], "version": [0, 1, 4, 6, 11], "get_access_request": 0, "retriev": [0, 1], "given": [0, 1, 11], "its": 0, "all": [0, 1, 6, 11], "get_all_imag": 0, "imag": [0, 1, 4, 6], "A": [0, 1, 3, 4, 5, 6, 7, 11], "get_all_releas": 0, "get_all_schema": 0, "kind": [0, 1, 5, 7], "schemakind": [0, 1, 2, 5, 7], "none": [0, 1], "schema": [0, 1, 2, 4, 6], "enum": [0, 1], "defin": [0, 1, 5], "e": [0, 1, 3, 4, 5, 6, 7, 11], "g": [0, 1, 3, 4, 5, 6, 7], "accessrequest": [0, 1, 2, 3], "get_all_team": 0, "team": [0, 1], "get_download_by_filenam": 0, "semver": [0, 1], "filenam": [0, 1, 6], "download": [0, 1, 11], "try": 0, "from": [0, 1, 3, 4, 7, 8, 11], "get_download_fil": 0, "": [0, 1], "get_fil": 0, "get_model": 0, "get_model_card": 0, "card": [0, 1, 4, 5], "get_model_rol": 0, "role": [0, 1, 2], "get_model_user_rol": 0, "current": [0, 1, 10], "user": [0, 1, 3, 8], "task": [0, 1, 6], "librari": [0, 1, 6], "list": [0, 1, 6], "filter": [0, 1, 6], "search": [0, 1], "find": [0, 7], "provid": [0, 1, 2, 5, 6], "term": 0, "classif": [0, 1, 6], "tensorflow": [0, 1], "custom": [0, 1, 4, 6], "string": [0, 1, 5, 6, 7], "locat": [0, 1, 5], "get_releas": [0, 1, 6], "get_review": 0, "activ": 0, "bool": [0, 1, 9], "review": [0, 1], "within": [0, 1, 2, 3, 4, 5, 6, 7, 11], "boolean": 0, "repres": [0, 1, 6], "get_schema": 0, "schema_id": [0, 1, 3, 4, 5, 6, 7], "get_team": 0, "team_id": [0, 1, 3, 4, 5, 6, 11], "get_user_team": 0, "model_card_from_schema": 0, "patch_access_request": 0, "metadata": [0, 1, 3], "ani": [0, 1, 3, 4, 5, 6, 7], "updat": [0, 1, 3], "patch_model": 0, "name": [0, 1, 3, 4, 5, 6, 7, 11], "descript": [0, 1, 3, 4, 5, 6, 7, 11], "visibl": [0, 1, 4, 6], "public": [0, 1], "privat": [0, 1], "patch_team": 0, "post_access_request": 0, "post_model": 0, "modelvis": [0, 1, 2], "post_releas": 0, "note": [0, 1, 4, 5, 6, 7, 11], "model_card_vers": [0, 1, 6], "int": [0, 1, 9], "minor": [0, 1, 6], "fals": [0, 1, 7], "draft": [0, 1, 7], "new": [0, 1, 11], "signifi": 0, "post_review": 0, "decis": 0, "comment": 0, "semant": [0, 1], "make": [0, 1, 4, 6, 11], "either": [0, 1, 4, 6, 11], "approv": 0, "chang": [0, 1, 4, 6], "go": 0, "post_schema": 0, "json_schema": [0, 1, 5, 7], "dict": [0, 1], "post_team": 0, "put_model_card": 0, "latest": [0, 1, 4, 6], "put_releas": 0, "simple_upload": 0, "buffer": 0, "bytesio": [0, 1, 6], "simpl": [0, 11], "upload": [0, 1, 11], "valu": [0, 1], "whether": [0, 1], "publicli": 0, "model_senior_responsible_offic": 0, "msro": 0, "model_technical_review": 0, "mtr": 0, "owner": 0, "type": [0, 1, 6, 7], "access_request": [0, 1, 3], "bailoexcept": [0, 1, 2], "gener": [0, 1, 3, 4, 6, 7, 8, 11], "responseexcept": [0, 2], "gave": 0, "created_bi": 1, "being": 1, "made": 1, "thi": [1, 2, 3, 4, 5, 6, 7, 10, 11], "ha": [1, 4], "been": [1, 4, 5], "classmethod": [1, 3, 4, 6, 7, 9], "interact": [1, 2, 3, 4, 6, 7], "messag": [1, 6], "confirm": 1, "remov": 1, "from_id": 1, "exist": [1, 3], "state": 1, "experi": [1, 2], "local": [1, 3, 4, 5, 6, 7], "which": [1, 3, 4, 5, 6, 7, 8], "run": [1, 3, 4, 6, 7, 11], "raw": 1, "inform": [1, 3, 4, 6, 7], "about": 1, "create_experi": [1, 5], "x": [1, 5], "rang": [1, 5], "start_run": [1, 5], "log_param": [1, 5], "lr": [1, 5], "0": [1, 3, 4, 5, 6, 7, 11], "01": [1, 3, 5], "insert": [1, 3, 4, 5, 6, 7], "train": [1, 5], "here": [1, 11], "log_metr": [1, 5], "accuraci": [1, 5], "86": [1, 5], "log_artifact": [1, 5], "weight": [1, 5], "pth": [1, 6], "publish": [1, 10], "mc_loc": [1, 5], "perform": [1, 5, 8], "performancemetr": [1, 5], "run_id": [1, 5], "1": [1, 3, 4, 5, 6, 7, 11], "from_mlflow": [1, 5], "tracking_uri": [1, 5], "experiment_id": [1, 5], "import": [1, 3, 4, 6, 7, 11], "mlflow": [1, 2], "track": [1, 2], "server": [1, 5], "uri": [1, 5], "rais": 1, "importerror": 1, "instal": [1, 2, 5, 6], "artifact": [1, 5], "log": [1, 5], "log_dataset": 1, "dataset": [1, 4], "arbitrari": [1, 5], "titl": [1, 7], "metric": [1, 5], "dictionari": 1, "param": [1, 5], "result": 1, "select": [1, 5, 6], "present": 1, "next": [1, 4, 5, 6], "depend": [1, 5, 8], "is_mlflow": 1, "start": [1, 2], "mark": 1, "card_from_model": [], "copi": [], "differ": 6, "yet": 1, "implement": 1, "notimplementederror": 1, "Not": 1, "card_from_schema": [1, 4, 5, 6, 11], "card_from_templ": 1, "templat": 1, "build": [1, 8, 10], "create_releas": [1, 6, 11], "true": [1, 7], "call": [1, 3, 4, 6], "method": [1, 5], "get_card_latest": 1, "get_card_revis": 1, "revis": 1, "get_imag": 1, "refer": [1, 6], "get_latest_releas": [1, 6], "from_vers": 1, "get_rol": 1, "get_user_rol": 1, "summari": [1, 7], "update_model_card": [1, 5, 6], "model_card": [1, 5, 6], "If": [1, 4, 5, 6, 11], "attribut": [1, 3, 4, 6], "option": [1, 10], "ar": [1, 3, 4, 5, 6, 7, 8, 10, 11], "store": 1, "write": [1, 6], "give": [], "read": [], "determin": 1, "disk": [1, 6], "set": [1, 4, 6], "data": [1, 4], "directori": [1, 6, 11], "load": 1, "zip": 1, "ecosystem": 2, "manag": 2, "lifecycl": [2, 5], "machin": [2, 5], "learn": [2, 4, 5, 6], "support": [1, 2, 3, 4, 5, 6, 7], "featur": 2, "develop": 2, "core": [2, 3, 4, 5, 6, 7], "resnet": 2, "50": [2, 9], "exampl": [2, 3, 4, 5, 7, 10], "pytorch": 2, "bailo": [3, 7], "enabl": [3, 4, 6, 7], "intuit": [3, 4, 6, 7], "servic": [3, 4, 5, 6, 7], "environ": [3, 4, 5, 6, 7], "notebook": [3, 4, 5, 6, 7], "through": [3, 4, 5, 6, 7], "follow": [3, 4, 5, 6, 7, 11], "concept": [3, 4, 5, 6, 7], "prerequisit": [3, 4, 5, 6, 7], "3": [3, 4, 5, 6, 7, 11], "8": [3, 4, 5, 6, 7, 9, 11], "higher": [3, 4, 5, 6, 7, 11], "includ": [1, 3, 4, 5, 6, 7, 8, 10], "demo": [3, 4, 5, 6, 7], "remot": [3, 4, 5, 6, 7], "see": [3, 4, 5, 6, 7], "http": [3, 4, 5, 6, 7, 9, 11], "github": [3, 4, 5, 6, 7], "com": [3, 4, 5, 6, 7], "gchq": [3, 4, 5, 6, 7], "split": [3, 4, 6, 7, 11], "two": [3, 4, 6, 7], "sub": [3, 4, 6, 7], "packag": [3, 4, 6, 7, 8, 10], "For": [3, 4, 6, 7], "direct": [3, 4, 6, 7], "more": [3, 4, 5, 6, 7], "oper": [3, 4, 6, 7], "In": [3, 4, 5, 6, 7, 8, 11], "order": [3, 4, 5, 6, 7, 11], "you": [3, 4, 5, 6, 7, 11], "first": [3, 4, 5, 6, 7], "need": [3, 4, 5, 6, 7], "instanti": [3, 4, 5, 6, 7], "By": [3, 4, 6, 7], "howev": [3, 4, 6, 7], "also": [3, 4, 5, 6, 7, 10], "pass": [3, 4, 5, 6, 7], "when": [1, 3, 4, 6, 7, 10], "necessari": [3, 4, 5, 6, 7], "statement": [1, 3, 4, 5, 6, 7], "127": [3, 4, 5, 6, 7], "8080": [3, 4, 5, 6, 7, 11], "host": [3, 4, 5, 6, 7], "section": [3, 4, 5, 6, 7, 11], "we": [3, 4, 5, 6, 7], "ll": [3, 4, 5, 6, 7], "On": [3, 4, 6, 7], "must": [1, 3, 4, 5, 6, 7], "consist": [3, 4, 6, 7], "least": [3, 4, 6], "upon": [3, 4, 6, 7], "creation": [3, 4, 6, 7], "These": [3, 4, 6, 7, 8], "below": [3, 4, 5, 6, 7], "befor": [3, 4, 5, 6, 7], "our": [3, 4, 5, 6, 7], "yolov5": [3, 5], "detect": [3, 5], "uncategoris": [3, 4, 5, 6, 11], "overview": [3, 4, 5, 6, 7], "entiti": 3, "test": [3, 7, 10], "enddat": 3, "1970": 3, "minim": [1, 3, 4, 6, 11], "v10": [1, 3, 4, 6, 11], "previou": [3, 4, 5, 6, 7], "your": [3, 4, 5, 6, 7], "edit": 3, "directli": [3, 5, 6], "demonstr": [3, 5, 6], "new_metadata": 3, "newnam": 3, "simpli": 3, "addit": [5, 6], "cover": 5, "offer": 5, "integr": [5, 6, 11], "might": 5, "wider": 5, "particular": 5, "complet": 5, "basic": [5, 9], "models_and_releases_demo_pytorch": 5, "ipynb": 5, "step": [5, 6], "have": [4, 5, 6], "thu": 5, "too": [4, 5, 6, 7], "how": [4, 5, 6], "do": [5, 6, 7], "time": [4, 5, 6], "later": [4, 5, 6], "pip": [5, 6, 11], "random": [5, 7], "element": 5, "tutori": 5, "instanc": [4, 5, 6, 7], "sampl": 5, "actual": [4, 5], "onli": [1, 5, 6, 8, 10, 11], "function": [5, 7], "ui": 5, "command": [5, 6], "line": 5, "typic": [5, 7], "localhost": [5, 11], "5000": [5, 7], "browser": 5, "design": [5, 9], "displai": [5, 6], "wai": 5, "therefor": 5, "extern": 5, "script": 5, "quit": 5, "larg": 5, "set_schema": 5, "py": [5, 9, 10], "assign": [1, 4, 5, 6], "randint": 5, "1000000": 5, "mandatori": 5, "field": 5, "new_card": [4, 5, 6], "tag": [5, 6, 7], "modelsummari": [5, 6], "work": [5, 11], "sequenti": 5, "so": 5, "re": [5, 6], "parallel": 5, "would": [5, 7], "better": 5, "anchor_t": 5, "4": [4, 5, 6], "scale": 5, "98": 5, "txt": [5, 6], "2": [4, 5, 6], "set_tracking_uri": 5, "set_experi": 5, "demonst": 5, "same": [1, 5, 6], "set_tag": 5, "info": 5, "As": 5, "previous": 5, "mention": 5, "experiment_mlflow": 5, "BE": 5, "found": [5, 6], "ON": 5, "THE": 5, "becaus": 5, "intend": 5, "success": [4, 5, 6], "specifi": [1, 5], "well": 5, "case": [5, 6], "per": 5, "earlier": [5, 6], "should": [4, 5, 6], "now": [4, 5, 6], "under": 5, "tab": 5, "addition": 5, "relev": 6, "linux": 6, "cpu": 6, "torch": [6, 9], "torchvis": 6, "index": 6, "org": [6, 7], "whl": 6, "mac": 6, "window": [6, 11], "resnet50": 6, "resnet50_weight": 6, "other": [6, 7, 11], "like": [4, 6], "ad": 6, "backend": [4, 6, 11], "mai": [4, 6, 10, 11], "relai": [4, 6], "empti": [4, 6], "beta": 11, "out": [4, 6], "scope": [4, 6], "print": [4, 6], "f": [4, 6, 11], "abov": [4, 5, 6], "want": [4, 6], "match": [4, 6], "otherwis": [1, 4, 6], "thrown": [4, 6], "adjust": 6, "don": 6, "t": 6, "drastic": 6, "behaviour": 6, "separ": 6, "itself": 6, "release_on": 6, "save": 6, "them": 6, "take": 6, "allow": 6, "u": 6, "without": 6, "up": 6, "space": 6, "torch_model": 6, "state_dict": 6, "To": [5, 6], "content": [6, 11], "last": 6, "s3": [4, 6], "large_fil": [], "open": 11, "rb": [], "altern": 6, "both": [5, 6, 10], "release_latest": 6, "successfulli": 6, "ident": 6, "similarli": 6, "bailo_resnet50_weight": 6, "wb": [], "final": 6, "ve": 6, "load_state_dict": 6, "init": 6, "identifi": 7, "suffic": 7, "reserv": 7, "administr": 7, "def": 7, "random_gener": 7, "n": [7, 9], "10": 7, "join": 7, "choic": [7, 9], "ascii_uppercas": 7, "digit": 7, "k": [7, 9], "07": 7, "properti": [1, 7], "modeloverview": 7, "what": [5, 7], "doe": 7, "minlength": 7, "maxlength": 7, "searchabl": 7, "help": [7, 8], "arrai": 7, "widget": 7, "tagselectorbeta": 7, "item": 7, "uniqueitem": 7, "requir": [1, 5, 7, 10, 11], "additionalproperti": 7, "git": [1, 8, 11], "hook": [8, 9], "scan": 8, "prior": 8, "checkin": 8, "configur": [8, 10], "focus": 8, "action": 8, "prevent": 8, "fail": 8, "dure": 8, "format": 8, "automat": 8, "auto": 8, "black": 8, "sort": 8, "isort": 8, "lint": [8, 10], "left": 8, "discret": 8, "master": 9, "pkg": 9, "whitelist": 9, "numpi": 9, "cv2": 9, "pyodbc": 9, "pydant": 9, "ciso8601": 9, "netcdf4": 9, "scipi": 9, "cv": 9, "conftest": 9, "setrecursionlimit": 9, "getrecursionlimit": 9, "job": 9, "100": 9, "persist": 9, "ye": 9, "rcfile": 9, "mode": 9, "unsaf": 9, "float": 9, "_": 9, "msg": 9, "max": [1, 5, 9], "exit": 9, "snake_cas": 9, "rgx": 9, "foo": 9, "bar": 9, "baz": 9, "toto": 9, "tutu": 9, "tata": 9, "pascalcas": 9, "upper_cas": 9, "min": [1, 5, 9], "j": 9, "ex": 9, "df": 9, "ax": 9, "group": 9, "long": 9, "after": 9, "paren": 9, "120": 9, "1000": 9, "stmt": 9, "miscellan": 9, "fixm": 9, "xxx": 9, "todo": 9, "9": 9, "jump": 9, "typecheck": 9, "np": 9, "pyspark": 9, "sql": 9, "collect_list": 9, "optpars": 9, "thread": 9, "_local": 9, "_thread": 9, "swagger_cli": 9, "mutat": 9, "dbutil": 9, "cb_": 9, "_cb": 9, "za": 9, "z0": 9, "9_": 9, "unused_": 9, "six": 9, "move": 9, "past": 9, "futur": [9, 10], "io": 9, "setup": [9, 10], "post_init": 9, "_asdict": 9, "_field": 9, "_replac": 9, "_sourc": 9, "_make": 9, "cl": 9, "7": 9, "expr": 9, "12": 9, "15": 9, "20": 9, "6": 9, "tkinter": 9, "tix": 9, "ext": 9, "known": 9, "azureiai": 9, "logist": 9, "inventoryplan": 9, "overgener": 9, "pyproject": 10, "main": 10, "project": 10, "replac": 10, "flit": 10, "poetri": 10, "consid": 10, "viabl": 10, "setuptool": 10, "cfg": 10, "still": 10, "wrapper": 11, "tabl": 11, "binari": 11, "yolo": 11, "yolov4": 11, "look": 11, "onc": 11, "my_releas": 11, "onnx": 11, "documen": 11, "render": 11, "sphinx": 11, "serv": 11, "doc": [1, 11], "html": 11, "bat": 11, "alreadi": 11, "prompt": 11, "overwrit": 11, "huski": 11, "instruct": 11, "cli": 11, "pre": 11, "commit": 11, "pytest": 11, "ran": [5, 11], "accordingli": 11, "categori": 11, "autom": 11, "purpos": 11, "sure": 11, "m": 11, "datacard": [1, 2], "datacard_id": [1, 4], "entri": [1, 2], "data_card": [1, 4], "data_card_schema": 1, "data_card_vers": [1, 4], "update_data_card": [1, 4], "entrykind": [1, 2], "model_card_schema": 1, "download_al": [1, 6], "home": 1, "ubuntu": 1, "lib": 1, "exclud": [1, 6], "fnmatch": 1, "unix": 1, "shell": 1, "style": 1, "wildcard": 1, "stage": 4, "imagenet": 4, "storageloc": 4, "destin": 6, "minimalschema": [1, 2], "select_bi": [1, 5], "describ": 1, "warn": 1, "mlflow_uri": 1, "static": 1, "get_all_schema_id": 1, "scenario": 5, "seen": 5, "done": 5, "could": 5, "highest": 5, "twice": 5, "fetch": 6, "just": 6}, "objects": {"": [[2, 0, 0, "-", "bailo"]], "bailo.core": [[0, 0, 0, "-", "agent"], [0, 0, 0, "-", "client"], [0, 0, 0, "-", "enums"], [0, 0, 0, "-", "exceptions"]], "bailo.core.agent": [[0, 1, 1, "", "Agent"], [0, 1, 1, "", "PkiAgent"], [0, 1, 1, "", "TokenAgent"]], "bailo.core.agent.Agent": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "delete"], [0, 2, 1, "", "get"], [0, 2, 1, "", "patch"], [0, 2, 1, "", "post"], [0, 2, 1, "", "push"], [0, 2, 1, "", "put"]], "bailo.core.agent.PkiAgent": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "delete"], [0, 2, 1, "", "get"], [0, 2, 1, "", "patch"], [0, 2, 1, "", "post"], [0, 2, 1, "", "put"]], "bailo.core.agent.TokenAgent": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "delete"], [0, 2, 1, "", "get"], [0, 2, 1, "", "patch"], [0, 2, 1, "", "post"], [0, 2, 1, "", "put"]], "bailo.core.client": [[0, 1, 1, "", "Client"]], "bailo.core.client.Client": [[0, 2, 1, "", "delete_access_request"], [0, 2, 1, "", "delete_file"], [0, 2, 1, "", "delete_release"], [0, 2, 1, "", "get_access_request"], [0, 2, 1, "", "get_access_requests"], [0, 2, 1, "", "get_all_images"], [0, 2, 1, "", "get_all_releases"], [0, 2, 1, "", "get_all_schemas"], [0, 2, 1, "", "get_all_teams"], [0, 2, 1, "", "get_download_by_filename"], [0, 2, 1, "", "get_download_file"], [0, 2, 1, "", "get_files"], [0, 2, 1, "", "get_model"], [0, 2, 1, "", "get_model_card"], [0, 2, 1, "", "get_model_roles"], [0, 2, 1, "", "get_model_user_roles"], [0, 2, 1, "", "get_models"], [0, 2, 1, "", "get_release"], [0, 2, 1, "", "get_reviews"], [0, 2, 1, "", "get_schema"], [0, 2, 1, "", "get_team"], [0, 2, 1, "", "get_user_teams"], [0, 2, 1, "", "model_card_from_schema"], [0, 2, 1, "", "patch_access_request"], [0, 2, 1, "", "patch_model"], [0, 2, 1, "", "patch_team"], [0, 2, 1, "", "post_access_request"], [0, 2, 1, "", "post_model"], [0, 2, 1, "", "post_release"], [0, 2, 1, "", "post_review"], [0, 2, 1, "", "post_schema"], [0, 2, 1, "", "post_team"], [0, 2, 1, "", "put_model_card"], [0, 2, 1, "", "put_release"], [0, 2, 1, "", "simple_upload"]], "bailo.core.enums": [[0, 1, 1, "", "EntryKind"], [0, 1, 1, "", "MinimalSchema"], [0, 1, 1, "", "ModelVisibility"], [0, 1, 1, "", "Role"], [0, 1, 1, "", "SchemaKind"]], "bailo.core.enums.EntryKind": [[0, 3, 1, "", "DATACARD"], [0, 3, 1, "", "MODEL"]], "bailo.core.enums.MinimalSchema": [[0, 3, 1, "", "ACCESS_REQUEST"], [0, 3, 1, "", "DATACARD"], [0, 3, 1, "", "MODEL"]], "bailo.core.enums.ModelVisibility": [[0, 3, 1, "", "PRIVATE"], [0, 3, 1, "", "PUBLIC"]], "bailo.core.enums.Role": [[0, 3, 1, "", "MODEL_SENIOR_RESPONSIBLE_OFFICER"], [0, 3, 1, "", "MODEL_TECHNICAL_REVIEWER"], [0, 3, 1, "", "OWNER"]], "bailo.core.enums.SchemaKind": [[0, 3, 1, "", "ACCESS_REQUEST"], [0, 3, 1, "", "MODEL"]], "bailo.core.exceptions": [[0, 4, 1, "", "BailoException"], [0, 4, 1, "", "ResponseException"]], "bailo.helper": [[1, 0, 0, "-", "access_request"], [1, 0, 0, "-", "datacard"], [1, 0, 0, "-", "entry"], [1, 0, 0, "-", "model"], [1, 0, 0, "-", "release"], [1, 0, 0, "-", "schema"]], "bailo.helper.access_request": [[1, 1, 1, "", "AccessRequest"]], "bailo.helper.access_request.AccessRequest": [[1, 2, 1, "", "create"], [1, 2, 1, "", "delete"], [1, 2, 1, "", "from_id"], [1, 2, 1, "", "update"]], "bailo.helper.datacard": [[1, 1, 1, "", "Datacard"]], "bailo.helper.datacard.Datacard": [[1, 2, 1, "", "create"], [1, 5, 1, "", "data_card"], [1, 5, 1, "", "data_card_schema"], [1, 5, 1, "", "data_card_version"], [1, 2, 1, "", "from_id"], [1, 2, 1, "", "update_data_card"]], "bailo.helper.entry": [[1, 1, 1, "", "Entry"]], "bailo.helper.entry.Entry": [[1, 2, 1, "", "card_from_schema"], [1, 2, 1, "", "card_from_template"], [1, 2, 1, "", "get_card_latest"], [1, 2, 1, "", "get_card_revision"], [1, 2, 1, "", "get_roles"], [1, 2, 1, "", "get_user_roles"], [1, 2, 1, "", "update"]], "bailo.helper.model": [[1, 1, 1, "", "Experiment"], [1, 1, 1, "", "Model"]], "bailo.helper.model.Experiment": [[1, 2, 1, "", "create"], [1, 2, 1, "", "from_mlflow"], [1, 2, 1, "", "log_artifacts"], [1, 2, 1, "", "log_dataset"], [1, 2, 1, "", "log_metrics"], [1, 2, 1, "", "log_params"], [1, 2, 1, "", "publish"], [1, 2, 1, "", "start_run"]], "bailo.helper.model.Model": [[1, 2, 1, "", "create"], [1, 2, 1, "", "create_experiment"], [1, 2, 1, "", "create_release"], [1, 2, 1, "", "from_id"], [1, 2, 1, "", "from_mlflow"], [1, 2, 1, "", "get_image"], [1, 2, 1, "", "get_images"], [1, 2, 1, "", "get_latest_release"], [1, 2, 1, "", "get_release"], [1, 2, 1, "", "get_releases"], [1, 5, 1, "", "model_card"], [1, 5, 1, "", "model_card_schema"], [1, 5, 1, "", "model_card_version"], [1, 2, 1, "", "search"], [1, 2, 1, "", "update_model_card"]], "bailo.helper.release": [[1, 1, 1, "", "Release"]], "bailo.helper.release.Release": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "create"], [1, 2, 1, "", "delete"], [1, 2, 1, "", "download"], [1, 2, 1, "", "download_all"], [1, 2, 1, "", "from_version"], [1, 2, 1, "", "update"], [1, 2, 1, "", "upload"], [1, 5, 1, "", "version"]], "bailo.helper.schema": [[1, 1, 1, "", "Schema"]], "bailo.helper.schema.Schema": [[1, 2, 1, "", "create"], [1, 2, 1, "", "from_id"], [1, 2, 1, "", "get_all_schema_ids"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "property", "Python property"]}, "titleterms": {"bailo": [0, 1, 2, 4, 5, 6, 11], "core": 0, "packag": [0, 1, 2, 9, 11], "helper": 1, "welcom": 2, "": [2, 9], "python": [2, 5, 9, 11], "client": [2, 5, 11], "document": [2, 11], "notebook": 2, "manag": [3, 4, 6, 7, 9], "access": [3, 9], "request": 3, "introduct": [3, 4, 5, 6, 7], "creat": [3, 4, 5, 6, 7, 9], "new": [3, 4, 5, 6, 7, 9], "retriev": [3, 4, 6, 7], "an": [3, 4, 5, 6, 7, 9], "us": [3, 4, 6, 7, 9], "from_id": [3, 4, 6, 7], "method": [3, 4, 6, 7, 9], "make": [3, 9], "chang": [3, 9], "delet": 3, "experi": 5, "track": 5, "mlflow": 5, "connect": 5, "set": [5, 9], "up": [5, 9], "prepar": [5, 6], "custom": 5, "schema": [5, 7], "conduct": 5, "run": [5, 9], "dummi": [5, 9], "import": [5, 9], "exist": [4, 5, 6, 7, 9], "from": [5, 6, 9], "publish": 5, "result": [5, 9], "model": 6, "releas": 6, "resnet": 6, "50": 6, "exampl": [6, 9], "pytorch": 6, "updat": [4, 6], "base": [4, 6, 9], "popul": [4, 6], "card": 6, "weight": 6, "upload": 6, "download": 6, "load": [6, 9], "pre": 8, "commit": 8, "config": 8, "yaml": 8, "A": 9, "comma": 9, "separ": 9, "list": 9, "modul": 9, "name": 9, "where": 9, "c": 9, "extens": 9, "mai": 9, "ar": 9, "activ": 9, "interpret": 9, "arbitrari": 9, "code": 9, "add": [9, 11], "file": 9, "directori": 9, "blacklist": 9, "thei": 9, "should": 9, "path": 9, "match": 9, "regex": 9, "pattern": 9, "The": 9, "against": 9, "execut": 9, "usual": 9, "sy": 9, "manipul": 9, "pygtk": 9, "requir": 9, "multipl": 9, "process": 9, "speed": 9, "pylint": 9, "specifi": 9, "0": 9, "auto": 9, "detect": 9, "number": 9, "processor": 9, "avail": 9, "control": 9, "amount": 9, "potenti": 9, "infer": 9, "valu": 9, "when": 9, "singl": 9, "object": 9, "thi": 9, "can": 9, "help": 9, "perform": 9, "deal": 9, "larg": 9, "function": 9, "complex": 9, "nest": 9, "condit": 9, "plugin": 9, "regist": 9, "addit": 9, "checker": 9, "pickl": 9, "collect": 9, "data": 9, "later": 9, "comparison": 9, "configur": 9, "enabl": 9, "would": 9, "attempt": 9, "guess": 9, "common": 9, "misconfigur": 9, "emit": 9, "user": 9, "friendli": 9, "hint": 9, "instead": 9, "fals": 9, "posit": 9, "error": 9, "messag": 9, "allow": 9, "onli": 9, "show": 9, "warn": 9, "confid": 9, "level": 9, "leav": 9, "empti": 9, "all": 9, "valid": 9, "high": 9, "inference_failur": 9, "undefin": 9, "disabl": 9, "report": 9, "categori": 9, "given": 9, "id": 9, "you": 9, "either": 9, "give": 9, "identifi": 9, "put": 9, "option": 9, "time": 9, "command": 9, "line": 9, "appear": 9, "onc": 9, "also": 9, "everyth": 9, "first": 9, "reenabl": 9, "specif": [5, 9], "check": 9, "For": 9, "want": 9, "similar": 9, "If": 9, "class": 9, "have": 9, "displai": 9, "w": 9, "see": 9, "express": 9, "which": 9, "return": 9, "score": 9, "less": 9, "than": 9, "equal": 9, "10": 9, "variabl": 9, "refactor": 9, "convent": 9, "contain": 9, "each": 9, "well": 9, "statement": 9, "i": 9, "total": 9, "analyz": 9, "global": 9, "evalu": 9, "rp0004": 9, "templat": 9, "style": 9, "format": 9, "string": 9, "inform": 9, "doc": 9, "detail": 9, "output": 9, "text": 9, "parseabl": 9, "color": 9, "json": 9, "msv": 9, "visual": 9, "studio": 9, "e": 9, "g": 9, "mypackag": 9, "mymodul": 9, "myreporterclass": 9, "tell": 9, "whether": 9, "full": 9, "maximum": 9, "block": 9, "bodi": 9, "complet": 9, "never": 9, "inconsist": 9, "call": 9, "consid": 9, "explicit": 9, "print": 9, "correct": 9, "argument": 9, "regular": 9, "overrid": 9, "attribut": 9, "attr": 9, "bad": 9, "alwai": 9, "refus": 9, "constant": 9, "const": 9, "minimum": 9, "length": 9, "docstr": 9, "shorter": 9, "ones": 9, "exempt": 9, "good": 9, "accept": 9, "includ": 9, "invalid": 9, "inlin": 9, "iter": 9, "inlinevar": 9, "colon": 9, "delimit": 9, "determin": 9, "other": 9, "sever": 9, "do": 9, "decor": 9, "produc": 9, "properti": 9, "abc": 9, "abstractproperti": 9, "These": 9, "taken": 9, "consider": 9, "expect": 9, "end": 9, "ani": 9, "lf": 9, "crlf": 9, "regexp": 9, "longer": 9, "limit": 9, "space": 9, "indent": 9, "insid": 9, "hang": 9, "continu": 9, "unit": 9, "4": 9, "t": 9, "1": 9, "tab": 9, "charact": 9, "construct": 9, "whitespac": 9, "dict": 9, "tabul": 9, "etc": 9, "n222": 9, "2": 9, "trail": 9, "between": 9, "close": 9, "bracket": 9, "same": 9, "declar": 9, "test": [9, 11], "els": 9, "log": 9, "old": 9, "mean": 9, "fstr": 9, "f": 9, "paramet": 9, "note": 9, "tag": 9, "take": 9, "ignor": 9, "comment": 9, "comput": 9, "count": 9, "suggest": 9, "spell": 9, "mistak": 9, "dictionari": 9, "none": 9, "To": 9, "work": 9, "instal": [9, 11], "enchant": 9, "word": 9, "privat": 9, "one": 9, "per": 9, "store": 9, "unknown": 9, "rais": 9, "flag": 9, "implicit": 9, "str": 9, "concat": 9, "sequenc": 9, "gener": 9, "concaten": 9, "defin": 9, "over": 9, "context": 9, "contextlib": 9, "contextmanag": 9, "member": 9, "dynam": 9, "miss": 9, "system": 9, "so": 9, "shouldn": 9, "trigger": 9, "e1101": 9, "mixin": 9, "its": 9, "case": 9, "insensit": 9, "about": 9, "owner": 9, "whenev": 9, "opaqu": 9, "while": 9, "some": 9, "branch": 9, "might": 9, "partial": 9, "In": 9, "still": 9, "rest": 9, "support": 9, "qualifi": 9, "project": 9, "namespac": 9, "dure": 9, "runtim": 9, "thu": 9, "cannot": 9, "deduc": 9, "static": 9, "analysi": 9, "It": 9, "unix": 9, "possibl": 9, "wa": 9, "found": 9, "aspect": 9, "find": 9, "edit": 9, "distanc": 9, "order": 9, "signatur": 9, "suppos": 9, "builtin": 9, "rememb": 9, "avoid": 9, "unus": 9, "treat": 9, "violat": 9, "callback": 9, "must": 9, "start": [9, 11], "those": 9, "default": 9, "lead": 9, "underscor": 9, "we": 9, "init": 9, "redefin": 9, "assign": 9, "instanc": 9, "exclud": 9, "protect": 9, "metaclass": 9, "r0902": 9, "boolean": 9, "r0916": 9, "local": [9, 11], "parent": 9, "r0901": 9, "public": 9, "r0904": 9, "yield": 9, "r0903": 9, "just": 9, "top": 9, "wildcard": 9, "analys": 9, "fallback": 9, "both": 9, "3": 9, "compat": 9, "anoth": 9, "deprec": 9, "graph": 9, "extern": 9, "depend": 9, "rp0402": 9, "everi": 9, "intern": 9, "forc": 9, "recogn": 9, "part": 9, "standard": 9, "librari": 9, "third": 9, "parti": 9, "coupl": 9, "prefer": 9, "except": 9, "being": 9, "caught": 9, "baseexcept": 9, "pypyroject": 10, "toml": 10, "kei": 11, "featur": 11, "get": 11, "build": 11, "develop": 11, "precommit": 11, "datacard": 4, "best": 5, "search": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Introduction": [[7, "Introduction"], [3, "Introduction"], [4, "Introduction"], [5, "Introduction"], [6, "Introduction"]], "Using the .from_id() method": [[7, "Using-the-.from_id()-method"], [3, "Using-the-.from_id()-method"], [4, "Using-the-.from_id()-method"], [6, "Using-the-.from_id()-method"]], "Managing Schemas": [[7, "Managing-Schemas"]], "Creating a new schema": [[7, "Creating-a-new-schema"]], "Retrieving an existing schema": [[7, "Retrieving-an-existing-schema"]], "pre-commit-config.yaml": [[8, "pre-commit-config-yaml"]], "A comma-separated list of package or module names from where C extensions may": [[9, "a-comma-separated-list-of-package-or-module-names-from-where-c-extensions-may"]], "be loaded. Extensions are loading into the active Python interpreter and may": [[9, "be-loaded-extensions-are-loading-into-the-active-python-interpreter-and-may"]], "run arbitrary code.": [[9, "run-arbitrary-code"]], "Add files or directories to the blacklist. They should be base names, not": [[9, "add-files-or-directories-to-the-blacklist-they-should-be-base-names-not"]], "paths.": [[9, "paths"]], "Add files or directories matching the regex patterns to the blacklist. The": [[9, "add-files-or-directories-matching-the-regex-patterns-to-the-blacklist-the"]], "regex matches against base names, not paths.": [[9, "regex-matches-against-base-names-not-paths"]], "Python code to execute, usually for sys.path manipulation such as": [[9, "python-code-to-execute-usually-for-sys-path-manipulation-such-as"]], "pygtk.require().": [[9, "pygtk-require"]], "Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the": [[9, "use-multiple-processes-to-speed-up-pylint-specifying-0-will-auto-detect-the"]], "number of processors available to use.": [[9, "number-of-processors-available-to-use"]], "Control the amount of potential inferred values when inferring a single": [[9, "control-the-amount-of-potential-inferred-values-when-inferring-a-single"]], "object. This can help the performance when dealing with large functions or": [[9, "object-this-can-help-the-performance-when-dealing-with-large-functions-or"]], "complex, nested conditions.": [[9, "complex-nested-conditions"]], "List of plugins (as comma separated values of python module names) to load,": [[9, "list-of-plugins-as-comma-separated-values-of-python-module-names-to-load"]], "usually to register additional checkers.": [[9, "usually-to-register-additional-checkers"]], "Pickle collected data for later comparisons.": [[9, "pickle-collected-data-for-later-comparisons"]], "Specify a configuration file.": [[9, "specify-a-configuration-file"]], "When enabled, pylint would attempt to guess common misconfiguration and emit": [[9, "when-enabled-pylint-would-attempt-to-guess-common-misconfiguration-and-emit"]], "user-friendly hints instead of false-positive error messages.": [[9, "user-friendly-hints-instead-of-false-positive-error-messages"]], "Allow loading of arbitrary C extensions. Extensions are imported into the": [[9, "allow-loading-of-arbitrary-c-extensions-extensions-are-imported-into-the"]], "active Python interpreter and may run arbitrary code.": [[9, "active-python-interpreter-and-may-run-arbitrary-code"]], "Only show warnings with the listed confidence levels. Leave empty to show": [[9, "only-show-warnings-with-the-listed-confidence-levels-leave-empty-to-show"]], "all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.": [[9, "all-valid-levels-high-inference-inference-failure-undefined"]], "Disable the message, report, category or checker with the given id(s). You": [[9, "disable-the-message-report-category-or-checker-with-the-given-id-s-you"]], "can either give multiple identifiers separated by comma (,) or put this": [[9, "can-either-give-multiple-identifiers-separated-by-comma-or-put-this"]], "option multiple times (only on the command line, not in the configuration": [[9, "option-multiple-times-only-on-the-command-line-not-in-the-configuration"]], "file where it should appear only once). You can also use \u201c\u2013disable=all\u201d to": [[9, "file-where-it-should-appear-only-once-you-can-also-use-disable-all-to"]], "disable everything first and then reenable specific checks. For example, if": [[9, "disable-everything-first-and-then-reenable-specific-checks-for-example-if"]], "you want to run only the similarities checker, you can use \u201c\u2013disable=all": [[9, "you-want-to-run-only-the-similarities-checker-you-can-use-disable-all"]], "\u2013enable=similarities\u201d. If you want to run only the classes checker, but have": [[9, "enable-similarities-if-you-want-to-run-only-the-classes-checker-but-have"]], "no Warning level messages displayed, use \u201c\u2013disable=all \u2013enable=classes": [[9, "no-warning-level-messages-displayed-use-disable-all-enable-classes"]], "\u2013disable=W\u201d.": [[9, "disable-w"]], "Enable the message, report, category or checker with the given id(s). You can": [[9, "enable-the-message-report-category-or-checker-with-the-given-id-s-you-can"]], "either give multiple identifier separated by comma (,) or put this option": [[9, "either-give-multiple-identifier-separated-by-comma-or-put-this-option"]], "multiple time (only on the command line, not in the configuration file where": [[9, "multiple-time-only-on-the-command-line-not-in-the-configuration-file-where"]], "it should appear only once). See also the \u201c\u2013disable\u201d option for examples.": [[9, "it-should-appear-only-once-see-also-the-disable-option-for-examples"]], "Python expression which should return a score less than or equal to 10. You": [[9, "python-expression-which-should-return-a-score-less-than-or-equal-to-10-you"]], "have access to the variables \u2018error\u2019, \u2018warning\u2019, \u2018refactor\u2019, and \u2018convention\u2019": [[9, "have-access-to-the-variables-error-warning-refactor-and-convention"]], "which contain the number of messages in each category, as well as \u2018statement\u2019": [[9, "which-contain-the-number-of-messages-in-each-category-as-well-as-statement"]], "which is the total number of statements analyzed. This score is used by the": [[9, "which-is-the-total-number-of-statements-analyzed-this-score-is-used-by-the"]], "global evaluation report (RP0004).": [[9, "global-evaluation-report-rp0004"]], "Template used to display messages. This is a python new-style format string": [[9, "template-used-to-display-messages-this-is-a-python-new-style-format-string"]], "used to format the message information. See doc for all details.": [[9, "used-to-format-the-message-information-see-doc-for-all-details"]], "Set the output format. Available formats are text, parseable, colorized, json": [[9, "set-the-output-format-available-formats-are-text-parseable-colorized-json"]], "and msvs (visual studio). You can also give a reporter class, e.g.": [[9, "and-msvs-visual-studio-you-can-also-give-a-reporter-class-e-g"]], "mypackage.mymodule.MyReporterClass.": [[9, "mypackage-mymodule-myreporterclass"]], "Tells whether to display a full report or only the messages.": [[9, "tells-whether-to-display-a-full-report-or-only-the-messages"]], "Activate the evaluation score.": [[9, "activate-the-evaluation-score"]], "Maximum number of nested blocks for function / method body": [[9, "maximum-number-of-nested-blocks-for-function-method-body"]], "Complete name of functions that never returns. When checking for": [[9, "complete-name-of-functions-that-never-returns-when-checking-for"]], "inconsistent-return-statements if a never returning function is called then": [[9, "inconsistent-return-statements-if-a-never-returning-function-is-called-then"]], "it will be considered as an explicit return statement and no message will be": [[9, "it-will-be-considered-as-an-explicit-return-statement-and-no-message-will-be"]], "printed.": [[9, "printed"]], "Naming style matching correct argument names.": [[9, "naming-style-matching-correct-argument-names"]], "Regular expression matching correct argument names. Overrides argument-": [[9, "regular-expression-matching-correct-argument-names-overrides-argument"]], "naming-style.": [[9, "naming-style"], [9, "id3"], [9, "id6"]], "Naming style matching correct attribute names.": [[9, "naming-style-matching-correct-attribute-names"]], "Regular expression matching correct attribute names. Overrides attr-naming-": [[9, "regular-expression-matching-correct-attribute-names-overrides-attr-naming"]], "style.": [[9, "style"], [9, "id1"], [9, "id2"], [9, "id4"], [9, "id5"]], "Bad variable names which should always be refused, separated by a comma.": [[9, "bad-variable-names-which-should-always-be-refused-separated-by-a-comma"]], "Naming style matching correct class attribute names.": [[9, "naming-style-matching-correct-class-attribute-names"]], "Regular expression matching correct class attribute names. Overrides class-": [[9, "regular-expression-matching-correct-class-attribute-names-overrides-class"]], "attribute-naming-style.": [[9, "attribute-naming-style"]], "Naming style matching correct class names.": [[9, "naming-style-matching-correct-class-names"]], "Regular expression matching correct class names. Overrides class-naming-": [[9, "regular-expression-matching-correct-class-names-overrides-class-naming"]], "Naming style matching correct constant names.": [[9, "naming-style-matching-correct-constant-names"]], "Regular expression matching correct constant names. Overrides const-naming-": [[9, "regular-expression-matching-correct-constant-names-overrides-const-naming"]], "Minimum line length for functions/classes that require docstrings, shorter": [[9, "minimum-line-length-for-functions-classes-that-require-docstrings-shorter"]], "ones are exempt.": [[9, "ones-are-exempt"]], "Naming style matching correct function names.": [[9, "naming-style-matching-correct-function-names"]], "Regular expression matching correct function names. Overrides function-": [[9, "regular-expression-matching-correct-function-names-overrides-function"]], "Good variable names which should always be accepted, separated by a comma.": [[9, "good-variable-names-which-should-always-be-accepted-separated-by-a-comma"]], "Include a hint for the correct naming format with invalid-name.": [[9, "include-a-hint-for-the-correct-naming-format-with-invalid-name"]], "Naming style matching correct inline iteration names.": [[9, "naming-style-matching-correct-inline-iteration-names"]], "Regular expression matching correct inline iteration names. Overrides": [[9, "regular-expression-matching-correct-inline-iteration-names-overrides"]], "inlinevar-naming-style.": [[9, "inlinevar-naming-style"]], "Naming style matching correct method names.": [[9, "naming-style-matching-correct-method-names"]], "Regular expression matching correct method names. Overrides method-naming-": [[9, "regular-expression-matching-correct-method-names-overrides-method-naming"]], "Naming style matching correct module names.": [[9, "naming-style-matching-correct-module-names"]], "Regular expression matching correct module names. Overrides module-naming-": [[9, "regular-expression-matching-correct-module-names-overrides-module-naming"]], "Colon-delimited sets of names that determine each other\u2019s naming style when": [[9, "colon-delimited-sets-of-names-that-determine-each-other-s-naming-style-when"]], "the name regexes allow several styles.": [[9, "the-name-regexes-allow-several-styles"]], "Regular expression which should only match function or class names that do": [[9, "regular-expression-which-should-only-match-function-or-class-names-that-do"]], "not require a docstring.": [[9, "not-require-a-docstring"]], "List of decorators that produce properties, such as abc.abstractproperty. Add": [[9, "list-of-decorators-that-produce-properties-such-as-abc-abstractproperty-add"]], "to this list to register other decorators that produce valid properties.": [[9, "to-this-list-to-register-other-decorators-that-produce-valid-properties"]], "These decorators are taken in consideration only for invalid-name.": [[9, "these-decorators-are-taken-in-consideration-only-for-invalid-name"]], "Naming style matching correct variable names.": [[9, "naming-style-matching-correct-variable-names"]], "Regular expression matching correct variable names. Overrides variable-": [[9, "regular-expression-matching-correct-variable-names-overrides-variable"]], "Expected format of line ending, e.g. empty (any line ending), LF or CRLF.": [[9, "expected-format-of-line-ending-e-g-empty-any-line-ending-lf-or-crlf"]], "Regexp for a line that is allowed to be longer than the limit.": [[9, "regexp-for-a-line-that-is-allowed-to-be-longer-than-the-limit"]], "Number of spaces of indent required inside a hanging or continued line.": [[9, "number-of-spaces-of-indent-required-inside-a-hanging-or-continued-line"]], "String used as indentation unit. This is usually \u201c \u201c (4 spaces) or \u201c\\t\u201d (1": [[9, "string-used-as-indentation-unit-this-is-usually-4-spaces-or-t-1"]], "tab).": [[9, "tab"]], "Maximum number of characters on a single line.": [[9, "maximum-number-of-characters-on-a-single-line"]], "Maximum number of lines in a module.": [[9, "maximum-number-of-lines-in-a-module"]], "List of optional constructs for which whitespace checking is disabled. `dict-": [[9, "list-of-optional-constructs-for-which-whitespace-checking-is-disabled-dict"]], "separator` is used to allow tabulation in dicts, etc.: {1 : 1,\\n222: 2}.": [[9, "separator-is-used-to-allow-tabulation-in-dicts-etc-1-1-n222-2"]], "trailing-comma allows a space between comma and closing bracket: (a, ).": [[9, "trailing-comma-allows-a-space-between-comma-and-closing-bracket-a"]], "empty-line allows space-only lines.": [[9, "empty-line-allows-space-only-lines"]], "Allow the body of a class to be on the same line as the declaration if body": [[9, "allow-the-body-of-a-class-to-be-on-the-same-line-as-the-declaration-if-body"]], "contains single statement.": [[9, "contains-single-statement"]], "Allow the body of an if to be on the same line as the test if there is no": [[9, "allow-the-body-of-an-if-to-be-on-the-same-line-as-the-test-if-there-is-no"]], "else.": [[9, "else"]], "Format style used to check logging format string. old means using %": [[9, "format-style-used-to-check-logging-format-string-old-means-using"]], "formatting, new is for {} formatting,and fstr is for f-strings.": [[9, "formatting-new-is-for-formatting-and-fstr-is-for-f-strings"]], "Logging modules to check that the string format arguments are in logging": [[9, "logging-modules-to-check-that-the-string-format-arguments-are-in-logging"]], "function parameter format.": [[9, "function-parameter-format"]], "List of note tags to take in consideration, separated by a comma.": [[9, "list-of-note-tags-to-take-in-consideration-separated-by-a-comma"]], "Ignore comments when computing similarities.": [[9, "ignore-comments-when-computing-similarities"]], "Ignore docstrings when computing similarities.": [[9, "ignore-docstrings-when-computing-similarities"]], "Ignore imports when computing similarities.": [[9, "ignore-imports-when-computing-similarities"]], "Minimum lines number of a similarity.": [[9, "minimum-lines-number-of-a-similarity"]], "Limits count of emitted suggestions for spelling mistakes.": [[9, "limits-count-of-emitted-suggestions-for-spelling-mistakes"]], "Spelling dictionary name. Available dictionaries: none. To make it work,": [[9, "spelling-dictionary-name-available-dictionaries-none-to-make-it-work"]], "install the python-enchant package.": [[9, "install-the-python-enchant-package"]], "List of comma separated words that should not be checked.": [[9, "list-of-comma-separated-words-that-should-not-be-checked"]], "A path to a file that contains the private dictionary; one word per line.": [[9, "a-path-to-a-file-that-contains-the-private-dictionary-one-word-per-line"]], "Tells whether to store unknown words to the private dictionary (see the": [[9, "tells-whether-to-store-unknown-words-to-the-private-dictionary-see-the"]], "\u2013spelling-private-dict-file option) instead of raising a message.": [[9, "spelling-private-dict-file-option-instead-of-raising-a-message"]], "This flag controls whether the implicit-str-concat-in-sequence should": [[9, "this-flag-controls-whether-the-implicit-str-concat-in-sequence-should"]], "generate a warning on implicit string concatenation in sequences defined over": [[9, "generate-a-warning-on-implicit-string-concatenation-in-sequences-defined-over"]], "several lines.": [[9, "several-lines"]], "List of decorators that produce context managers, such as": [[9, "list-of-decorators-that-produce-context-managers-such-as"]], "contextlib.contextmanager. Add to this list to register other decorators that": [[9, "contextlib-contextmanager-add-to-this-list-to-register-other-decorators-that"]], "produce valid context managers.": [[9, "produce-valid-context-managers"]], "List of members which are set dynamically and missed by pylint inference": [[9, "list-of-members-which-are-set-dynamically-and-missed-by-pylint-inference"]], "system, and so shouldn\u2019t trigger E1101 when accessed. Python regular": [[9, "system-and-so-shouldn-t-trigger-e1101-when-accessed-python-regular"]], "expressions are accepted.": [[9, "expressions-are-accepted"]], "Tells whether missing members accessed in mixin class should be ignored. A": [[9, "tells-whether-missing-members-accessed-in-mixin-class-should-be-ignored-a"]], "mixin class is detected if its name ends with \u201cmixin\u201d (case insensitive).": [[9, "mixin-class-is-detected-if-its-name-ends-with-mixin-case-insensitive"]], "Tells whether to warn about missing members when the owner of the attribute": [[9, "tells-whether-to-warn-about-missing-members-when-the-owner-of-the-attribute"]], "is inferred to be None.": [[9, "is-inferred-to-be-none"]], "This flag controls whether pylint should warn about no-member and similar": [[9, "this-flag-controls-whether-pylint-should-warn-about-no-member-and-similar"]], "checks whenever an opaque object is returned when inferring. The inference": [[9, "checks-whenever-an-opaque-object-is-returned-when-inferring-the-inference"]], "can return multiple potential results while evaluating a Python object, but": [[9, "can-return-multiple-potential-results-while-evaluating-a-python-object-but"]], "some branches might not be evaluated, which results in partial inference. In": [[9, "some-branches-might-not-be-evaluated-which-results-in-partial-inference-in"]], "that case, it might be useful to still emit no-member and other checks for": [[9, "that-case-it-might-be-useful-to-still-emit-no-member-and-other-checks-for"]], "the rest of the inferred objects.": [[9, "the-rest-of-the-inferred-objects"]], "List of class names for which member attributes should not be checked (useful": [[9, "list-of-class-names-for-which-member-attributes-should-not-be-checked-useful"]], "for classes with dynamically set attributes). This supports the use of": [[9, "for-classes-with-dynamically-set-attributes-this-supports-the-use-of"]], "qualified names.": [[9, "qualified-names"]], "List of module names for which member attributes should not be checked": [[9, "list-of-module-names-for-which-member-attributes-should-not-be-checked"]], "(useful for modules/projects where namespaces are manipulated during runtime": [[9, "useful-for-modules-projects-where-namespaces-are-manipulated-during-runtime"]], "and thus existing member attributes cannot be deduced by static analysis). It": [[9, "and-thus-existing-member-attributes-cannot-be-deduced-by-static-analysis-it"]], "supports qualified module names, as well as Unix pattern matching.": [[9, "supports-qualified-module-names-as-well-as-unix-pattern-matching"]], "Show a hint with possible names when a member name was not found. The aspect": [[9, "show-a-hint-with-possible-names-when-a-member-name-was-not-found-the-aspect"]], "of finding the hint is based on edit distance.": [[9, "of-finding-the-hint-is-based-on-edit-distance"]], "The minimum edit distance a name should have in order to be considered a": [[9, "the-minimum-edit-distance-a-name-should-have-in-order-to-be-considered-a"]], "similar match for a missing member name.": [[9, "similar-match-for-a-missing-member-name"]], "The total number of similar names that should be taken in consideration when": [[9, "the-total-number-of-similar-names-that-should-be-taken-in-consideration-when"]], "showing a hint for a missing member.": [[9, "showing-a-hint-for-a-missing-member"]], "List of decorators that change the signature of a decorated function.": [[9, "list-of-decorators-that-change-the-signature-of-a-decorated-function"]], "List of additional names supposed to be defined in builtins. Remember that": [[9, "list-of-additional-names-supposed-to-be-defined-in-builtins-remember-that"]], "you should avoid defining new builtins when possible.": [[9, "you-should-avoid-defining-new-builtins-when-possible"]], "Tells whether unused global variables should be treated as a violation.": [[9, "tells-whether-unused-global-variables-should-be-treated-as-a-violation"]], "List of strings which can identify a callback function by name. A callback": [[9, "list-of-strings-which-can-identify-a-callback-function-by-name-a-callback"]], "name must start or end with one of those strings.": [[9, "name-must-start-or-end-with-one-of-those-strings"]], "A regular expression matching the name of dummy variables (i.e. expected to": [[9, "a-regular-expression-matching-the-name-of-dummy-variables-i-e-expected-to"]], "not be used).": [[9, "not-be-used"]], "Argument names that match this expression will be ignored. Default to name": [[9, "argument-names-that-match-this-expression-will-be-ignored-default-to-name"]], "with leading underscore.": [[9, "with-leading-underscore"]], "Tells whether we should check for unused import in init files.": [[9, "tells-whether-we-should-check-for-unused-import-in-init-files"]], "List of qualified module names which can have objects that can redefine": [[9, "list-of-qualified-module-names-which-can-have-objects-that-can-redefine"]], "builtins.": [[9, "builtins"]], "List of method names used to declare (i.e. assign) instance attributes.": [[9, "list-of-method-names-used-to-declare-i-e-assign-instance-attributes"]], "List of member names, which should be excluded from the protected access": [[9, "list-of-member-names-which-should-be-excluded-from-the-protected-access"]], "warning.": [[9, "warning"]], "List of valid names for the first argument in a class method.": [[9, "list-of-valid-names-for-the-first-argument-in-a-class-method"]], "List of valid names for the first argument in a metaclass class method.": [[9, "list-of-valid-names-for-the-first-argument-in-a-metaclass-class-method"]], "Maximum number of arguments for function / method.": [[9, "maximum-number-of-arguments-for-function-method"]], "Maximum number of attributes for a class (see R0902).": [[9, "maximum-number-of-attributes-for-a-class-see-r0902"]], "Maximum number of boolean expressions in an if statement (see R0916).": [[9, "maximum-number-of-boolean-expressions-in-an-if-statement-see-r0916"]], "Maximum number of branch for function / method body.": [[9, "maximum-number-of-branch-for-function-method-body"]], "Maximum number of locals for function / method body.": [[9, "maximum-number-of-locals-for-function-method-body"]], "Maximum number of parents for a class (see R0901).": [[9, "maximum-number-of-parents-for-a-class-see-r0901"]], "Maximum number of public methods for a class (see R0904).": [[9, "maximum-number-of-public-methods-for-a-class-see-r0904"]], "Maximum number of return / yield for function / method body.": [[9, "maximum-number-of-return-yield-for-function-method-body"]], "Maximum number of statements in function / method body.": [[9, "maximum-number-of-statements-in-function-method-body"]], "Minimum number of public methods for a class (see R0903).": [[9, "minimum-number-of-public-methods-for-a-class-see-r0903"]], "List of modules that can be imported at any level, not just the top level": [[9, "list-of-modules-that-can-be-imported-at-any-level-not-just-the-top-level"]], "one.": [[9, "one"]], "Allow wildcard imports from modules that define all.": [[9, "allow-wildcard-imports-from-modules-that-define-all"]], "Analyse import fallback blocks. This can be used to support both Python 2 and": [[9, "analyse-import-fallback-blocks-this-can-be-used-to-support-both-python-2-and"]], "3 compatible code, which means that the block might have code that exists": [[9, "compatible-code-which-means-that-the-block-might-have-code-that-exists"]], "only in one or another interpreter, leading to false positives when analysed.": [[9, "only-in-one-or-another-interpreter-leading-to-false-positives-when-analysed"]], "Deprecated modules which should not be used, separated by a comma.": [[9, "deprecated-modules-which-should-not-be-used-separated-by-a-comma"]], "Create a graph of external dependencies in the given file (report RP0402 must": [[9, "create-a-graph-of-external-dependencies-in-the-given-file-report-rp0402-must"]], "not be disabled).": [[9, "not-be-disabled"], [9, "id7"]], "Create a graph of every (i.e. internal and external) dependencies in the": [[9, "create-a-graph-of-every-i-e-internal-and-external-dependencies-in-the"]], "given file (report RP0402 must not be disabled).": [[9, "given-file-report-rp0402-must-not-be-disabled"]], "Create a graph of internal dependencies in the given file (report RP0402 must": [[9, "create-a-graph-of-internal-dependencies-in-the-given-file-report-rp0402-must"]], "Force import order to recognize a module as part of the standard": [[9, "force-import-order-to-recognize-a-module-as-part-of-the-standard"]], "compatibility libraries.": [[9, "compatibility-libraries"]], "Force import order to recognize a module as part of a third party library.": [[9, "force-import-order-to-recognize-a-module-as-part-of-a-third-party-library"]], "Couples of modules and preferred modules, separated by a comma.": [[9, "couples-of-modules-and-preferred-modules-separated-by-a-comma"]], "Exceptions that will emit a warning when being caught. Defaults to": [[9, "exceptions-that-will-emit-a-warning-when-being-caught-defaults-to"]], "\u201cBaseException, Exception\u201d.": [[9, "baseexception-exception"]], "pypyroject.toml": [[10, "pypyroject-toml"]], "Bailo Python Client": [[11, "bailo-python-client"], [2, "bailo-python-client"]], "Key Features": [[11, "key-features"]], "Installing": [[11, "installing"]], "Getting Started": [[11, "getting-started"]], "Documentation": [[11, "documentation"]], "Building locally": [[11, "building-locally"]], "Development": [[11, "development"]], "Install and add precommit": [[11, "install-and-add-precommit"]], "Install the package locally": [[11, "install-the-package-locally"]], "Testing": [[11, "testing"]], "bailo.core package": [[0, "bailo-core-package"]], "bailo.helper package": [[1, "module-bailo.helper.access_request"]], "Welcome to Bailo\u2019s Python Client documentation!": [[2, "module-bailo"]], "Packages:": [[2, null]], "Notebooks:": [[2, null]], "Managing Access Requests": [[3, "Managing-Access-Requests"]], "Creating a new access request": [[3, "Creating-a-new-access-request"]], "Retrieving an access request": [[3, "Retrieving-an-access-request"]], "Making changes to an access request": [[3, "Making-changes-to-an-access-request"]], "Deleting an access request": [[3, "Deleting-an-access-request"]], "Managing Datacards": [[4, "Managing-Datacards"]], "Creating a new datacard in Bailo": [[4, "Creating-a-new-datacard-in-Bailo"]], "Creating and updating the base datacard": [[4, "Creating-and-updating-the-base-datacard"]], "Populating the datacard": [[4, "Populating-the-datacard"]], "Retrieving an existing datacard": [[4, "Retrieving-an-existing-datacard"]], "Experiment Tracking with Bailo & MLFlow": [[5, "Experiment-Tracking-with-Bailo-&-MLFlow"]], "Connecting with Bailo": [[5, "Connecting-with-Bailo"]], "Setting up MLFlow Tracking": [[5, "Setting-up-MLFlow-Tracking"]], "Preparing a custom schema for tracking": [[5, "Preparing-a-custom-schema-for-tracking"]], "Creating a new experiment": [[5, "Creating-a-new-experiment"]], "Conducting experiment runs": [[5, "Conducting-experiment-runs"]], "Running an experiment with the Bailo python client": [[5, "Running-an-experiment-with-the-Bailo-python-client"]], "Creating a dummy MLFlow experiment run": [[5, "Creating-a-dummy-MLFlow-experiment-run"]], "Importing existing experiments from MLFlow into Bailo": [[5, "Importing-existing-experiments-from-MLFlow-into-Bailo"]], "Publishing results to Bailo": [[5, "Publishing-results-to-Bailo"]], "Publishing a specific run": [[5, "Publishing-a-specific-run"]], "Publishing the best run": [[5, "Publishing-the-best-run"]], "Managing Models & Releases (ResNet-50 Example with PyTorch)": [[6, "Managing-Models-&-Releases-(ResNet-50-Example-with-PyTorch)"]], "Creating a new ResNet-50 model in Bailo": [[6, "Creating-a-new-ResNet-50-model-in-Bailo"]], "Creating and updating the base model": [[6, "Creating-and-updating-the-base-model"]], "Creating and populating a model card": [[6, "Creating-and-populating-a-model-card"]], "Retrieving an existing model": [[6, "Retrieving-an-existing-model"]], "Creating and managing releases for models": [[6, "Creating-and-managing-releases-for-models"]], "Creating a release": [[6, "Creating-a-release"]], "Preparing the model weights using PyTorch": [[6, "Preparing-the-model-weights-using-PyTorch"]], "Uploading weights to the release": [[6, "Uploading-weights-to-the-release"]], "Retrieving a release": [[6, "Retrieving-a-release"]], "Downloading weights from the release": [[6, "Downloading-weights-from-the-release"]], "Loading the model using PyTorch": [[6, "Loading-the-model-using-PyTorch"]], "Searching for models": [[6, "Searching-for-models"]]}, "indexentries": {"accessrequest (class in bailo.helper.access_request)": [[1, "bailo.helper.access_request.AccessRequest"]], "datacard (class in bailo.helper.datacard)": [[1, "bailo.helper.datacard.Datacard"]], "entry (class in bailo.helper.entry)": [[1, "bailo.helper.entry.Entry"]], "experiment (class in bailo.helper.model)": [[1, "bailo.helper.model.Experiment"]], "model (class in bailo.helper.model)": [[1, "bailo.helper.model.Model"]], "release (class in bailo.helper.release)": [[1, "bailo.helper.release.Release"]], "schema (class in bailo.helper.schema)": [[1, "bailo.helper.schema.Schema"]], "__init__() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.__init__"]], "bailo.helper.access_request": [[1, "module-bailo.helper.access_request"]], "bailo.helper.datacard": [[1, "module-bailo.helper.datacard"]], "bailo.helper.entry": [[1, "module-bailo.helper.entry"]], "bailo.helper.model": [[1, "module-bailo.helper.model"]], "bailo.helper.release": [[1, "module-bailo.helper.release"]], "bailo.helper.schema": [[1, "module-bailo.helper.schema"]], "card_from_schema() (bailo.helper.entry.entry method)": [[1, "bailo.helper.entry.Entry.card_from_schema"]], "card_from_template() (bailo.helper.entry.entry method)": [[1, "bailo.helper.entry.Entry.card_from_template"]], "create() (bailo.helper.access_request.accessrequest class method)": [[1, "bailo.helper.access_request.AccessRequest.create"]], "create() (bailo.helper.datacard.datacard class method)": [[1, "bailo.helper.datacard.Datacard.create"]], "create() (bailo.helper.model.experiment class method)": [[1, "bailo.helper.model.Experiment.create"]], "create() (bailo.helper.model.model class method)": [[1, "bailo.helper.model.Model.create"]], "create() (bailo.helper.release.release class method)": [[1, "bailo.helper.release.Release.create"]], "create() (bailo.helper.schema.schema class method)": [[1, "bailo.helper.schema.Schema.create"]], "create_experiment() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.create_experiment"]], "create_release() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.create_release"]], "data_card (bailo.helper.datacard.datacard property)": [[1, "bailo.helper.datacard.Datacard.data_card"]], "data_card_schema (bailo.helper.datacard.datacard property)": [[1, "bailo.helper.datacard.Datacard.data_card_schema"]], "data_card_version (bailo.helper.datacard.datacard property)": [[1, "bailo.helper.datacard.Datacard.data_card_version"]], "delete() (bailo.helper.access_request.accessrequest method)": [[1, "bailo.helper.access_request.AccessRequest.delete"]], "delete() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.delete"]], "download() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.download"]], "download_all() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.download_all"]], "from_id() (bailo.helper.access_request.accessrequest class method)": [[1, "bailo.helper.access_request.AccessRequest.from_id"]], "from_id() (bailo.helper.datacard.datacard class method)": [[1, "bailo.helper.datacard.Datacard.from_id"]], "from_id() (bailo.helper.model.model class method)": [[1, "bailo.helper.model.Model.from_id"]], "from_id() (bailo.helper.schema.schema class method)": [[1, "bailo.helper.schema.Schema.from_id"]], "from_mlflow() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.from_mlflow"]], "from_mlflow() (bailo.helper.model.model class method)": [[1, "bailo.helper.model.Model.from_mlflow"]], "from_version() (bailo.helper.release.release class method)": [[1, "bailo.helper.release.Release.from_version"]], "get_all_schema_ids() (bailo.helper.schema.schema static method)": [[1, "bailo.helper.schema.Schema.get_all_schema_ids"]], "get_card_latest() (bailo.helper.entry.entry method)": [[1, "bailo.helper.entry.Entry.get_card_latest"]], "get_card_revision() (bailo.helper.entry.entry method)": [[1, "bailo.helper.entry.Entry.get_card_revision"]], "get_image() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_image"]], "get_images() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_images"]], "get_latest_release() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_latest_release"]], "get_release() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_release"]], "get_releases() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_releases"]], "get_roles() (bailo.helper.entry.entry method)": [[1, "bailo.helper.entry.Entry.get_roles"]], "get_user_roles() (bailo.helper.entry.entry method)": [[1, "bailo.helper.entry.Entry.get_user_roles"]], "log_artifacts() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.log_artifacts"]], "log_dataset() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.log_dataset"]], "log_metrics() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.log_metrics"]], "log_params() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.log_params"]], "model_card (bailo.helper.model.model property)": [[1, "bailo.helper.model.Model.model_card"]], "model_card_schema (bailo.helper.model.model property)": [[1, "bailo.helper.model.Model.model_card_schema"]], "model_card_version (bailo.helper.model.model property)": [[1, "bailo.helper.model.Model.model_card_version"]], "module": [[1, "module-bailo.helper.access_request"], [1, "module-bailo.helper.datacard"], [1, "module-bailo.helper.entry"], [1, "module-bailo.helper.model"], [1, "module-bailo.helper.release"], [1, "module-bailo.helper.schema"], [2, "module-bailo"]], "publish() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.publish"]], "search() (bailo.helper.model.model class method)": [[1, "bailo.helper.model.Model.search"]], "start_run() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.start_run"]], "update() (bailo.helper.access_request.accessrequest method)": [[1, "bailo.helper.access_request.AccessRequest.update"]], "update() (bailo.helper.entry.entry method)": [[1, "bailo.helper.entry.Entry.update"]], "update() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.update"]], "update_data_card() (bailo.helper.datacard.datacard method)": [[1, "bailo.helper.datacard.Datacard.update_data_card"]], "update_model_card() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.update_model_card"]], "upload() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.upload"]], "version (bailo.helper.release.release property)": [[1, "bailo.helper.release.Release.version"]], "bailo": [[2, "module-bailo"]]}})